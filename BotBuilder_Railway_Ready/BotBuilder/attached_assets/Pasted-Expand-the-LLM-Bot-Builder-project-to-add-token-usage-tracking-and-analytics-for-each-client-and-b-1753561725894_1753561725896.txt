Expand the "LLM Bot Builder" project to add token usage tracking and analytics for each client and bot. Build on top of the current code without breaking existing functionality.

1. **Backend Tracking**
   - In openai_service.py, update generate_response to:
       * Capture the number of tokens used for each GPT-4 response.
       * Return token usage along with the message.
   - Create a new database table `usage` with columns:
       * id (primary key)
       * client_id
       * bot_id
       * tokens_used
       * timestamp
   - Every time a bot sends a GPT-4 response, log the tokens used in the `usage` table with the associated client_id and bot_id.

2. **Usage API Routes**
   - Add /api/usage with:
       * GET (optional query params: client_id, bot_id, date range)
       * Returns total tokens used, number of messages, and cost estimate based on current OpenAI pricing.
   - Add /api/clients/<client_id>/usage and /api/bots/<bot_id>/usage for filtered analytics.

3. **Frontend Dashboard Analytics**
   - On the client page:
       * Display total token usage for that client.
       * Show a breakdown per bot.
   - On each botâ€™s page:
       * Display token usage and number of messages processed.
   - Add a simple chart or table using vanilla JS to show usage over time (daily/weekly).

4. **Cost Management**
   - In settings (or a config file), allow setting a custom cost per 1k tokens.
   - Use this to calculate estimated cost per client and per bot.
   - Display estimated cost in the dashboard next to token usage.

5. **Optional Soft Limits**
   - Add a field to the `clients` table for `token_limit` (optional).
   - If a client goes over their limit, log a warning and return a flag in the usage API.
   - Display an alert in the dashboard when a client is approaching or exceeding their limit.

6. **General**
   - Keep the tracking lightweight and modular.
   - Do not break existing bot chat functionality.
   - Ensure the dashboard updates usage stats dynamically without requiring a page refresh.

When finished, I should be able to:
- See total token usage per client and per bot.
- Estimate cost per client to manage billing and upcharges.
- Track usage trends over time with simple charts or tables.
- Optionally set token limits per client and get alerts if they go over.
