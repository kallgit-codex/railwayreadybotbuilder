Expand the "LLM Bot Builder" project to implement the deployment wizard and integrate bots with real messaging platforms. Use the existing Clients + Bots structure and build on top of the current code.

1. **Deployment Wizard UI**
   - In the dashboard, add a "Deploy" button for each bot.
   - When clicked, open a modal or panel where I can:
       * Select which platform(s) to deploy to (Instagram, WhatsApp, Facebook Messenger, Telegram).
       * Enter or confirm API keys/tokens for the selected client.
       * Click "Deploy" to activate the bot.

2. **Backend Deployment Routes**
   - Create a new route: /api/bots/<bot_id>/deploy.
   - Accept parameters for which platform to deploy to.
   - Use the client's saved API keys to configure the connection.
   - Return deployment status (success/failure).

3. **Platform Integrations**
   - In platform_service.py, build real integration stubs for:
       * Instagram Messenger API (Meta Graph API).
       * WhatsApp Business API.
       * Facebook Messenger API.
       * Telegram Bot API.
   - Each function should:
       * Accept the bot_id and client API keys.
       * Register webhooks/endpoints so incoming messages from the platform are sent to /api/bots/<bot_id>/message.
       * Send outgoing responses from the bot back through the platform's API.
   - For now, you can include example webhook handlers and outbound message functions with placeholder code to be replaced with real API endpoints.

4. **Webhook Handling**
   - Add generic Flask routes (e.g., /webhook/instagram, /webhook/whatsapp, etc.).
   - These should:
       * Verify incoming requests from each platform.
       * Extract the message and user ID.
       * Pass the message into the bot_message route for the correct bot_id.
       * Send the response back to the user via the platform's API.

5. **Client API Keys**
   - Use each client's saved API keys (from Phase 2) when configuring platform connections.
   - If a client has multiple platforms, allow saving multiple keys.
   - Ensure no hard-coded tokens; pull all credentials from the database.

6. **General**
   - Keep the integrations modular in platform_service.py so more platforms can be added later.
   - Make sure all new routes and services are well-documented in comments.
   - Maintain existing functionality (bot creation, knowledge uploads, chat).
   - Keep the dashboard simple but functional for internal use.

When finished, I should be able to:
- Select a client and one of their bots.
- Click "Deploy" and choose Instagram, WhatsApp, Facebook Messenger, or Telegram.
- Enter or confirm API keys for that client.
- Activate the bot so messages sent to that platform are routed into the bot and responses are sent back automatically.
