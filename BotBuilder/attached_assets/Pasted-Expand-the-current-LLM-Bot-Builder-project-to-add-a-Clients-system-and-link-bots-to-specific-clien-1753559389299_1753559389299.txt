Expand the current "LLM Bot Builder" project to add a Clients system and link bots to specific clients. 

Build the following features on top of the existing code:

1. **Clients Backend**
   - Create a /api/clients route with:
       * GET to list all clients.
       * POST to create a new client with fields: client_id, name, notes, api_keys (JSON object).
   - Create a /api/clients/<client_id> route for:
       * GET to fetch a single client and their bots.
       * PUT to update client info and API keys.
       * DELETE to remove a client and all associated bots.
   - Store clients in the existing SQLite database. Use a new table `clients` with columns:
       * id (primary key)
       * name
       * notes
       * api_keys (JSON string)
   - Link bots to clients using a foreign key (client_id) in the bots table.

2. **Frontend Dashboard Updates**
   - Add a "Clients" section to index.html:
       * A list of all clients.
       * A form to create a new client (name + notes + API keys as key-value pairs).
       * When a client is clicked, display their info and bots.
   - Update dashboard.js to:
       * Fetch and display all clients on load.
       * Create new clients via /api/clients.
       * Edit and save API keys for a client.
       * Display only the bots linked to the selected client.
       * When creating a bot, select which client it belongs to.

3. **Linking Bots to Clients**
   - Update /api/bots POST to include a client_id when creating a bot.
   - Ensure /api/clients/<client_id> returns all bots linked to that client.
   - Update the database models to reflect the relationship between clients and bots.

4. **API Key Storage**
   - Store each client's API keys securely in the database as JSON.
   - Create a simple editor in the dashboard to view/edit the keys.
   - Prepare these keys to be used later by platform_service.py for deployment.

5. **General**
   - Do not break existing bot creation or chat functionality.
   - Keep the code modular (separate client logic into a service or controller if needed).
   - Maintain the current file structure.

When finished, I should be able to:
- Create and manage clients.
- Save client-specific API keys.
- Create bots linked to a client.
- View all bots per client in the dashboard.
